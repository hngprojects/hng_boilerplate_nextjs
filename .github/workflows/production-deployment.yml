name: Production Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - .github/workflows/**

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t hngdevops/nextjs-boilerplate:prod -f docker/prod/Dockerfile .

      - name: Save and compress Docker image
        run: |
          docker save hngdevops/nextjs-boilerplate:prod > nextjs-prod.tar
          gzip nextjs-prod.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: docker-image
          path: nextjs-prod.tar.gz

  deploy_to_prod:
    if: github.event.repository.fork == false
    runs-on: ubuntu-latest

    environment:
      name: "prod"
      url: ${{ vars.URL }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: docker-image
          path: .

      - name: Copy to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: "nextjs-prod.tar.gz"
          target: "/tmp/nextjs"

      - name: Deploy on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd /tmp/nextjs
            gunzip nextjs-prod.tar.gz
            docker load < nextjs-prod.tar
            rm -f nextjs-prod.tar
            cd /home/${{ secrets.USERNAME }}/hng_boilerplate_nextjs
            chmod +x ./scripts/*.sh
            ./scripts/prod_deploy.sh
